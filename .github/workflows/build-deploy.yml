#name of the workflow
name: Build and Deploy Code
#when should it trigger the pipeline
on: [push, pull_request]
#if you need to be more specific in the triggering then you can use like
# on:
#   push:
#     branches:
#       - "main"
#       - "anotherbranch"
#   pull_request:
#     branches: 
#       - "test_branch"
#a set of steps that is executed on the same runner
jobs:
  job1:
    #specifying the environment to be used which is configured in the githug with its name
    environment:
      name: testing
    #initializing the environment variables which will be available only inside the job1
    #if needed it globally in the file then initalize it outside the jobs
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    #configurations for the postgresql database to be used on the runner in github actions.
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        #Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    #specify what type of machine what to run this on.
    runs-on: ubuntu-latest
    #list of steps to be executed on the machine
    steps:
      - name: pulling git repo
        #actual command that needs to run on our machine to pull our repo
        #pulling the code is a common task so the name will be available from the github marketplace by checking checkout
        uses: actions/checkout@v4
      # - name: saying hii to abhi
      #   run: echo "hii abhi"
      - name: install python version 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        #running multiple commands
        # run: |
        #   pip install pytest
        #   pytest
        run: pytest
        #managing the docker
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest